สรุป self practice 6-10 ได้เรียนรู้อะไรบ้าง?
1. Document Object Model (DOM)
ในส่วนของ DOM เราได้เรียนรู้ว่า DOM คือโครงสร้างต้นไม้ (Tree Structure) ที่เบราว์เซอร์สร้างขึ้นจากเอกสาร HTML เพื่อให้ JavaScript เข้าถึงและจัดการกับองค์ประกอบ (element) ต่าง ๆ ในหน้าเว็บได้ ไม่ว่าจะเป็นการเพิ่ม ลบ หรือเปลี่ยนเนื้อหา
ได้ลองใช้คำสั่งอย่าง
document.querySelector() เพื่อเลือก element ตัวแรกที่ตรงกับ selector
document.querySelectorAll() เพื่อเลือกหลาย element พร้อมกัน
classList.contains() ใช้ตรวจสอบว่ามี class ที่เราต้องการหรือไม่
createElement() และ appendChild() สำหรับสร้างและเพิ่ม element ใหม่เข้าไปในหน้าเว็บ
จากโจทย์ที่ได้ทำ เช่น
การแสดงทุก child ของ <ul id="soup"> ด้วย firstElementChild และ nextElementSibling
การเปลี่ยนสีเมนูตามประเภท เช่น class "vegan" เป็นสีเขียว และ class "meat" เป็นสีแดง
การนับจำนวนเมนูแต่ละประเภทใน <ul>
การเพิ่มเมนูใหม่ เช่น “Tom Yum Soup” ลงในรายการ
ทำให้เข้าใจว่าการจัดการ DOM เป็นพื้นฐานสำคัญของการสร้างเว็บไซต์แบบโต้ตอบ (Interactive Website) และได้เห็นภาพว่าเอกสาร HTML จริง ๆ แล้วเป็นเหมือนต้นไม้ที่เราสามารถปีนขึ้นไปแก้ไขหรือเพิ่มข้อมูลได้ทุกส่วนผ่าน JavaScript
2. Event (เหตุการณ์บนหน้าเว็บ)
หัวข้อนี้เป็นเรื่องที่ยากแต่สนุกเพราะทำให้หน้าเว็บตอบสนองต่อการกระทำของผู้ใช้ เช่น การคลิก การกดปุ่ม หรือการพิมพ์ข้อความ
ตัวอย่างที่ได้ฝึกคือ
ใช้ addEventListener("keyup", ...) เพื่อเช็คว่าผู้ใช้กด Enter แล้ว log ค่าที่พิมพ์ลง console
ใช้ blur event ตรวจเมื่อผู้ใช้คลิกออกจากช่อง input ถ้าไม่กรอกชื่อจะแสดงข้อความเตือนสีแดง
ใช้ Regular Expression (เช่น /[^a-zA-Z]/) เพื่อตรวจว่าชื่อที่กรอกมีตัวเลขหรือสัญลักษณ์หรือไม่
ตรวจทั้งชื่อและนามสกุลว่าถูกต้องครบถ้วน ถ้าใช่ให้เด้งข้อความ "It's done" ด้วย alert()
ได้ฝึกการเขียนฟังก์ชันที่ตอบสนองต่อพฤติกรรมของผู้ใช้โดยตรง และเข้าใจว่า Event คือหัวใจของการทำให้เว็บ “โต้ตอบได้” (Interactive) เช่น ตรวจการพิมพ์ การคลิก หรือการออกจากช่องกรอกข้อมูล
3. Client Storage (Local Storage & Cookie)
เป็นเรื่องที่ยากมากเพราะเหมือนเราดูแลส่วนหลังบ้าน แบบเก็บข้อมูลของผู้ใช้ เป็นส่วนของการจัดเก็บข้อมูลฝั่งผู้ใช้ (Client Side) ซึ่งไม่ต้องอาศัยฐานข้อมูล
ได้ลองใช้ทั้ง
Local Storage → ใช้เก็บข้อมูลฝั่งเบราว์เซอร์ ไม่มีวันหมดอายุ เช่น
localStorage.setItem("userName", "Aom");
และสามารถดึงกลับมาได้ด้วย
localStorage.getItem("userName");
และ Cookie เป็นข้อมูลขนาดเล็กที่เบราว์เซอร์เก็บไว้ และส่งไปพร้อมกับทุก request ของเว็บ โดยเราสามารถตั้งวันหมดอายุได้ ได้รู้ว่าความแตกต่างระหว่าง localStorage และ cookie อ — localStorage จะเก็บอยู่ในเครื่องผู้ใช้เท่านั้น ไม่มีวันหมด และไม่ส่งไปกับ request ส่วน cookie จะมีวันหมดอายุและถูกส่งไปกับทุก request ของเว็บ ทำให้เหมาะกับการเก็บข้อมูลที่เกี่ยวข้องกับ session หรือการเข้าสู่ระบบ
จากทั้งหมดที่เรียนในช่วงนี้ ทำให้เข้าใจภาพรวมของการทำงานฝั่ง Frontend มากขึ้น ตั้งแต่โครงสร้างของหน้าเว็บ (DOM) การทำให้เว็บตอบสนองต่อผู้ใช้ (Event) และการจัดเก็บข้อมูลของผู้ใช้ในฝั่ง Browser (Client Storage)
